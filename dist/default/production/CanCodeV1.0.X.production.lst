

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Jun 23 23:05:08 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	nvCOMRAM
    35  00004E                     __pnvCOMRAM:
    36                           	opt stack 0
    37  00004E                     _timer1ReloadVal:
    38                           	opt stack 0
    39  00004E                     	ds	2
    40  000050                     _eusart1TxBufferRemaining:
    41                           	opt stack 0
    42  000050                     	ds	1
    43  0000                     _B0CONbits	set	3712
    44  0000                     _B0D0	set	3718
    45  0000                     _B0D1	set	3719
    46  0000                     _B0D2	set	3720
    47  0000                     _B0D3	set	3721
    48  0000                     _B0D4	set	3722
    49  0000                     _B0D5	set	3723
    50  0000                     _B0D6	set	3724
    51  0000                     _B0D7	set	3725
    52  0000                     _B0DLC	set	3717
    53  0000                     _B0EIDH	set	3715
    54  0000                     _B0EIDL	set	3716
    55  0000                     _B0SIDH	set	3713
    56  0000                     _B0SIDL	set	3714
    57  0000                     _BRGCON1	set	3651
    58  0000                     _BRGCON2	set	3652
    59  0000                     _BRGCON3	set	3653
    60  0000                     _RXF0EIDH	set	3810
    61  0000                     _RXF0EIDL	set	3811
    62  0000                     _RXF0SIDH	set	3808
    63  0000                     _RXF0SIDL	set	3809
    64  0000                     _RXF2EIDH	set	3818
    65  0000                     _RXF2EIDL	set	3819
    66  0000                     _RXF2SIDH	set	3816
    67  0000                     _RXF2SIDL	set	3817
    68  0000                     _RXFCON0	set	3654
    69  0000                     _RXFCON1	set	3655
    70  0000                     _RXM0EIDH	set	3834
    71  0000                     _RXM0EIDL	set	3835
    72  0000                     _RXM0SIDH	set	3832
    73  0000                     _RXM0SIDL	set	3833
    74  0000                     _RXM1EIDH	set	3838
    75  0000                     _RXM1EIDL	set	3839
    76  0000                     _RXM1SIDH	set	3836
    77  0000                     _RXM1SIDL	set	3837
    78  0000                     _RXB1CON	set	3888
    79  0000                     _RXB1CONbits	set	3888
    80  0000                     _RXB1D0	set	3894
    81  0000                     _RXB1D1	set	3895
    82  0000                     _RXB1D2	set	3896
    83  0000                     _RXB1D3	set	3897
    84  0000                     _RXB1D4	set	3898
    85  0000                     _RXB1D5	set	3899
    86  0000                     _RXB1D6	set	3900
    87  0000                     _RXB1D7	set	3901
    88  0000                     _RXB1DLC	set	3893
    89  0000                     _RXB1EIDH	set	3891
    90  0000                     _RXB1EIDL	set	3892
    91  0000                     _RXB1SIDH	set	3889
    92  0000                     _RXB1SIDL	set	3890
    93  0000                     _TXB0CONbits	set	3872
    94  0000                     _TXB0D0	set	3878
    95  0000                     _TXB0D1	set	3879
    96  0000                     _TXB0D2	set	3880
    97  0000                     _TXB0D3	set	3881
    98  0000                     _TXB0D4	set	3882
    99  0000                     _TXB0D5	set	3883
   100  0000                     _TXB0D6	set	3884
   101  0000                     _TXB0D7	set	3885
   102  0000                     _TXB0DLC	set	3877
   103  0000                     _TXB0EIDH	set	3875
   104  0000                     _TXB0EIDL	set	3876
   105  0000                     _TXB0SIDH	set	3873
   106  0000                     _TXB0SIDL	set	3874
   107  0000                     _WPUB	set	3931
   108  0000                     _TMR1	set	4046
   109  0000                     _BAUDCON1	set	4007
   110  0000                     _CANCON	set	3951
   111  0000                     _CANSTATbits	set	3950
   112  0000                     _ECANCON	set	3954
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _INTCONbits	set	4082
   115  0000                     _IPR1bits	set	3999
   116  0000                     _LATA	set	3977
   117  0000                     _LATB	set	3978
   118  0000                     _LATC	set	3979
   119  0000                     _OSCCON	set	4051
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCTUNE	set	3995
   122  0000                     _PIE1bits	set	3997
   123  0000                     _PIR1bits	set	3998
   124  0000                     _PIR5bits	set	3959
   125  0000                     _PORTCbits	set	3970
   126  0000                     _RCONbits	set	4048
   127  0000                     _RCREG1	set	4014
   128  0000                     _RCSTA1	set	4011
   129  0000                     _RCSTA1bits	set	4011
   130  0000                     _RXB0CON	set	3936
   131  0000                     _RXB0CONbits	set	3936
   132  0000                     _RXB0D0	set	3942
   133  0000                     _RXB0D1	set	3943
   134  0000                     _RXB0D2	set	3944
   135  0000                     _RXB0D3	set	3945
   136  0000                     _RXB0D4	set	3946
   137  0000                     _RXB0D5	set	3947
   138  0000                     _RXB0D6	set	3948
   139  0000                     _RXB0D7	set	3949
   140  0000                     _RXB0DLC	set	3941
   141  0000                     _RXB0EIDH	set	3939
   142  0000                     _RXB0EIDL	set	3940
   143  0000                     _RXB0SIDH	set	3937
   144  0000                     _RXB0SIDL	set	3938
   145  0000                     _SPBRG1	set	4015
   146  0000                     _SPBRGH1	set	3965
   147  0000                     _T1CON	set	4045
   148  0000                     _T1CONbits	set	4045
   149  0000                     _T1GCON	set	4010
   150  0000                     _T1GCONbits	set	4010
   151  0000                     _TMR1H	set	4047
   152  0000                     _TMR1L	set	4046
   153  0000                     _TRISA	set	3986
   154  0000                     _TRISB	set	3987
   155  0000                     _TRISC	set	3988
   156  0000                     _TXREG1	set	4013
   157  0000                     _TXSTA1	set	4012
   158                           
   159                           ; #config settings
   160  0000                     
   161                           	psect	cinit
   162  0004AE                     __pcinit:
   163                           	opt stack 0
   164  0004AE                     start_initialization:
   165                           	opt stack 0
   166  0004AE                     __initialization:
   167                           	opt stack 0
   168                           
   169                           ; Clear objects allocated to COMRAM (62 bytes)
   170  0004AE  EE00  F001         	lfsr	0,__pbssCOMRAM
   171  0004B2  0E3E               	movlw	62
   172  0004B4                     clear_0:
   173  0004B4  6AEE               	clrf	postinc0,c
   174  0004B6  06E8               	decf	wreg,f,c
   175  0004B8  E1FD               	bnz	clear_0
   176  0004BA                     end_of_initialization:
   177                           	opt stack 0
   178  0004BA                     __end_of__initialization:
   179                           	opt stack 0
   180  0004BA  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   181  0004BC  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   182  0004BE  0100               	movlb	0
   183  0004C0  EF52  F000         	goto	_main	;jump to C main() function
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           
   187                           	psect	bssCOMRAM
   188  000001                     __pbssCOMRAM:
   189                           	opt stack 0
   190  000001                     _USART1_RX_BUF:
   191                           	opt stack 0
   192  000001                     	ds	24
   193  000019                     _eusart1RxBuffer:
   194                           	opt stack 0
   195  000019                     	ds	8
   196  000021                     _eusart1TxBuffer:
   197                           	opt stack 0
   198  000021                     	ds	8
   199  000029                     _PM25:
   200                           	opt stack 0
   201  000029                     	ds	2
   202  00002B                     _USART1_RX_STA:
   203                           	opt stack 0
   204  00002B                     	ds	2
   205  00002D                     _eusart1RxCount:
   206                           	opt stack 0
   207  00002D                     	ds	1
   208  00002E                     _eusart1RxHead:
   209                           	opt stack 0
   210  00002E                     	ds	1
   211  00002F                     _eusart1RxTail:
   212                           	opt stack 0
   213  00002F                     	ds	1
   214  000030                     _eusart1TxHead:
   215                           	opt stack 0
   216  000030                     	ds	1
   217  000031                     _eusart1TxTail:
   218                           	opt stack 0
   219  000031                     	ds	1
   220  000032                     _temp_D0:
   221                           	opt stack 0
   222  000032                     	ds	1
   223  000033                     _temp_D1:
   224                           	opt stack 0
   225  000033                     	ds	1
   226  000034                     _temp_D2:
   227                           	opt stack 0
   228  000034                     	ds	1
   229  000035                     _temp_D3:
   230                           	opt stack 0
   231  000035                     	ds	1
   232  000036                     _temp_D4:
   233                           	opt stack 0
   234  000036                     	ds	1
   235  000037                     _temp_D5:
   236                           	opt stack 0
   237  000037                     	ds	1
   238  000038                     _temp_D6:
   239                           	opt stack 0
   240  000038                     	ds	1
   241  000039                     _temp_D7:
   242                           	opt stack 0
   243  000039                     	ds	1
   244  00003A                     _temp_DLC:
   245                           	opt stack 0
   246  00003A                     	ds	1
   247  00003B                     _temp_EIDH:
   248                           	opt stack 0
   249  00003B                     	ds	1
   250  00003C                     _temp_EIDL:
   251                           	opt stack 0
   252  00003C                     	ds	1
   253  00003D                     _temp_SIDH:
   254                           	opt stack 0
   255  00003D                     	ds	1
   256  00003E                     _temp_SIDL:
   257                           	opt stack 0
   258  00003E                     	ds	1
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           
   262                           	psect	cstackBANK0
   263  000060                     __pcstackBANK0:
   264                           	opt stack 0
   265  000060                     ECAN_Receive@RXMsgFlag:
   266                           	opt stack 0
   267  000060                     delay@x:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x0
   271  000060                     	ds	2
   272  000062                     delay@a:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x2
   276  000062                     	ds	2
   277  000064                     delay@b:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x4
   281  000064                     	ds	2
   282  000066                     ??_main:
   283                           
   284                           ; 1 bytes @ 0x6
   285  000066                     	ds	3
   286  000069                     main@temp:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x9
   290  000069                     	ds	2
   291  00006B                     main@CheckSum:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0xB
   295  00006B                     	ds	2
   296  00006D                     main@i:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0xD
   300  00006D                     	ds	1
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           
   304                           	psect	cstackCOMRAM
   305  00003F                     __pcstackCOMRAM:
   306                           	opt stack 0
   307  00003F                     EUSART1_Receive_ISR@res:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x0
   311  00003F                     	ds	1
   312  000040                     ??_INTERRUPT_InterruptManager:
   313                           
   314                           ; 1 bytes @ 0x1
   315  000040                     	ds	14
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 79 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  i               1   13[BANK0 ] unsigned char 
   329 ;;  CheckSum        2   11[BANK0 ] unsigned int 
   330 ;;  temp            2    9[BANK0 ] unsigned int 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   341 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   342 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   343 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   344 ;;Total ram usage:        8 bytes
   345 ;; Hardware stack levels required when called:    6
   346 ;; This function calls:
   347 ;;		_ECAN_Receive
   348 ;;		_ECAN_Transmit
   349 ;;		_InitECAN
   350 ;;		_SYSTEM_Initialize
   351 ;;		_delay
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text0
   358  0000A4                     __ptext0:
   359                           	opt stack 0
   360  0000A4                     _main:
   361                           	opt stack 25
   362                           
   363                           ;main.c: 81: SYSTEM_Initialize();
   364                           
   365                           ;incstack = 0
   366  0000A4  EC62  F002         	call	_SYSTEM_Initialize	;wreg free
   367                           
   368                           ;main.c: 82: InitECAN();
   369  0000A8  EC3F  F001         	call	_InitECAN	;wreg free
   370                           
   371                           ;main.c: 100: (INTCONbits.GIE = 1);
   372  0000AC  8EF2               	bsf	intcon,7,c	;volatile
   373                           
   374                           ;main.c: 103: (INTCONbits.PEIE = 1);
   375  0000AE  8CF2               	bsf	intcon,6,c	;volatile
   376  0000B0                     l1558:
   377                           
   378                           ;main.c: 113: if(USART1_RX_STA&0X8000)
   379  0000B0  AE2C               	btfss	_USART1_RX_STA+1,7,c	;volatile
   380  0000B2  D06E               	goto	l1590
   381                           
   382                           ;main.c: 114: {
   383                           ;main.c: 115: USART1_RX_STA = 0;
   384  0000B4  0E00               	movlw	0
   385  0000B6  6E2C               	movwf	_USART1_RX_STA+1,c	;volatile
   386  0000B8  0E00               	movlw	0
   387  0000BA  6E2B               	movwf	_USART1_RX_STA,c	;volatile
   388                           
   389                           ;main.c: 117: PORTCbits.RC3 = 1;
   390  0000BC  8682               	bsf	3970,3,c	;volatile
   391                           
   392                           ;main.c: 118: PORTCbits.RC2 = 1;
   393  0000BE  8482               	bsf	3970,2,c	;volatile
   394                           
   395                           ;main.c: 119: delay(200);
   396  0000C0  0E00               	movlw	0
   397  0000C2  0100               	movlb	0	; () banked
   398  0000C4  6F61               	movwf	(delay@x+1)& (0+255),b
   399  0000C6  0EC8               	movlw	200
   400  0000C8  6F60               	movwf	delay@x& (0+255),b
   401  0000CA  EC00  F002         	call	_delay	;wreg free
   402                           
   403                           ;main.c: 120: PORTCbits.RC3 = 0;
   404  0000CE  9682               	bcf	3970,3,c	;volatile
   405                           
   406                           ;main.c: 121: PORTCbits.RC2 = 0;
   407  0000D0  9482               	bcf	3970,2,c	;volatile
   408                           
   409                           ;main.c: 123: if(USART1_RX_BUF[0] == 0x42)
   410  0000D2  0E42               	movlw	66
   411  0000D4  1801               	xorwf	_USART1_RX_BUF,w,c
   412  0000D6  A4D8               	btfss	status,2,c
   413  0000D8  D05B               	goto	l1590
   414                           
   415                           ;main.c: 124: {
   416                           ;main.c: 125: uint16_t CheckSum = 0x00;
   417  0000DA  0E00               	movlw	0
   418  0000DC  0100               	movlb	0	; () banked
   419  0000DE  6F6C               	movwf	(main@CheckSum+1)& (0+255),b
   420  0000E0  0E00               	movlw	0
   421  0000E2  6F6B               	movwf	main@CheckSum& (0+255),b
   422                           
   423                           ;main.c: 126: uint16_t temp;
   424                           ;main.c: 127: for(unsigned char i=0;i<22;i++)
   425  0000E4  0E00               	movlw	0
   426  0000E6  0100               	movlb	0	; () banked
   427  0000E8  6F6D               	movwf	main@i& (0+255),b
   428  0000EA                     l1576:
   429                           
   430                           ; BSR set to: 0
   431  0000EA  0E15               	movlw	21
   432  0000EC  0100               	movlb	0	; () banked
   433  0000EE  656D               	cpfsgt	main@i& (0+255),b
   434  0000F0  D001               	goto	l1580
   435  0000F2  D015               	goto	l1586
   436  0000F4                     l1580:
   437                           
   438                           ; BSR set to: 0
   439                           ;main.c: 128: {
   440                           ;main.c: 129: CheckSum += USART1_RX_BUF[i];
   441  0000F4  0100               	movlb	0	; () banked
   442  0000F6  516D               	movf	main@i& (0+255),w,b
   443  0000F8  0D01               	mullw	1
   444  0000FA  0E01               	movlw	low _USART1_RX_BUF
   445  0000FC  24F3               	addwf	prodl,w,c
   446  0000FE  6ED9               	movwf	fsr2l,c
   447  000100  0E00               	movlw	high _USART1_RX_BUF
   448  000102  20F4               	addwfc	prodh,w,c
   449  000104  6EDA               	movwf	fsr2h,c
   450  000106  50DF               	movf	indf2,w,c
   451  000108  0100               	movlb	0	; () banked
   452  00010A  6F66               	movwf	??_main& (0+255),b
   453  00010C  0100               	movlb	0	; () banked
   454  00010E  5166               	movf	??_main& (0+255),w,b
   455  000110  0100               	movlb	0	; () banked
   456  000112  276B               	addwf	main@CheckSum& (0+255),f,b
   457  000114  0E00               	movlw	0
   458  000116  236C               	addwfc	(main@CheckSum+1)& (0+255),f,b
   459                           
   460                           ; BSR set to: 0
   461  000118  0100               	movlb	0	; () banked
   462  00011A  2B6D               	incf	main@i& (0+255),f,b
   463  00011C  D7E6               	goto	l1576
   464  00011E                     l1586:
   465                           
   466                           ; BSR set to: 0
   467                           ;main.c: 130: }
   468                           ;main.c: 131: temp = (uint16_t)USART1_RX_BUF[22]<<8 + USART1_RX_BUF[23];
   469  00011E  C018  F066         	movff	_USART1_RX_BUF+23,??_main
   470  000122  0E08               	movlw	8
   471  000124  0100               	movlb	0	; () banked
   472  000126  2766               	addwf	??_main& (0+255),f,b
   473  000128  5017               	movf	_USART1_RX_BUF+22,w,c
   474  00012A  0100               	movlb	0	; () banked
   475  00012C  6F67               	movwf	(??_main+1)& (0+255),b
   476  00012E  6B68               	clrf	(??_main+2)& (0+255),b
   477  000130  0100               	movlb	0	; () banked
   478  000132  2B66               	incf	??_main& (0+255),f,b
   479  000134  D004               	goto	u644
   480  000136                     u645:
   481  000136  90D8               	bcf	status,0,c
   482  000138  0100               	movlb	0	; () banked
   483  00013A  3767               	rlcf	(??_main+1)& (0+255),f,b
   484  00013C  3768               	rlcf	(??_main+2)& (0+255),f,b
   485  00013E                     u644:
   486  00013E  0100               	movlb	0	; () banked
   487  000140  2F66               	decfsz	??_main& (0+255),f,b
   488  000142  D7F9               	goto	u645
   489  000144  C067  F069         	movff	??_main+1,main@temp
   490  000148  C068  F06A         	movff	??_main+2,main@temp+1
   491                           
   492                           ;main.c: 132: if(CheckSum == temp)
   493  00014C  0100               	movlb	0	; () banked
   494  00014E  5169               	movf	main@temp& (0+255),w,b
   495  000150  0100               	movlb	0	; () banked
   496  000152  196B               	xorwf	main@CheckSum& (0+255),w,b
   497  000154  E11D               	bnz	l1590
   498  000156  0100               	movlb	0	; () banked
   499  000158  516A               	movf	(main@temp+1)& (0+255),w,b
   500  00015A  0100               	movlb	0	; () banked
   501  00015C  196C               	xorwf	(main@CheckSum+1)& (0+255),w,b
   502  00015E  A4D8               	btfss	status,2,c
   503  000160  D017               	goto	l1590
   504                           
   505                           ; BSR set to: 0
   506                           ;main.c: 133: {
   507                           ;main.c: 134: PM25 = (uint16_t)USART1_RX_BUF[12]<<8 + USART1_RX_BUF[13];
   508  000162  C00E  F066         	movff	_USART1_RX_BUF+13,??_main
   509  000166  0E08               	movlw	8
   510  000168  0100               	movlb	0	; () banked
   511  00016A  2766               	addwf	??_main& (0+255),f,b
   512  00016C  500D               	movf	_USART1_RX_BUF+12,w,c
   513  00016E  0100               	movlb	0	; () banked
   514  000170  6F67               	movwf	(??_main+1)& (0+255),b
   515  000172  6B68               	clrf	(??_main+2)& (0+255),b
   516  000174  0100               	movlb	0	; () banked
   517  000176  2B66               	incf	??_main& (0+255),f,b
   518  000178  D004               	goto	u664
   519  00017A                     u665:
   520  00017A  90D8               	bcf	status,0,c
   521  00017C  0100               	movlb	0	; () banked
   522  00017E  3767               	rlcf	(??_main+1)& (0+255),f,b
   523  000180  3768               	rlcf	(??_main+2)& (0+255),f,b
   524  000182                     u664:
   525  000182  0100               	movlb	0	; () banked
   526  000184  2F66               	decfsz	??_main& (0+255),f,b
   527  000186  D7F9               	goto	u665
   528  000188  C067  F029         	movff	??_main+1,_PM25
   529  00018C  C068  F02A         	movff	??_main+2,_PM25+1
   530  000190                     l1590:
   531                           
   532                           ;main.c: 135: }
   533                           ;main.c: 136: }
   534                           ;main.c: 137: }
   535                           ;main.c: 139: if(ECAN_Receive())
   536  000190  ECD0  F000         	call	_ECAN_Receive	;wreg free
   537  000194  0900               	iorlw	0
   538  000196  B4D8               	btfsc	status,2,c
   539  000198  D78B               	goto	l1558
   540                           
   541                           ;main.c: 140: {
   542                           ;main.c: 141: ECAN_Transmit();
   543  00019A  EC94  F001         	call	_ECAN_Transmit	;wreg free
   544  00019E  D788               	goto	l1558
   545  0001A0                     __end_of_main:
   546                           	opt stack 0
   547                           prodh	equ	0xFF4
   548                           prodl	equ	0xFF3
   549                           intcon	equ	0xFF2
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           indf2	equ	0xFDF
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8
   556                           
   557 ;; *************** function _delay *****************
   558 ;; Defined at:
   559 ;;		line 52 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  x               2    0[BANK0 ] unsigned int 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  b               2    4[BANK0 ] unsigned int 
   564 ;;  a               2    2[BANK0 ] unsigned int 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   575 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   577 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   578 ;;Total ram usage:        6 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    3
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text1
   589  000400                     __ptext1:
   590                           	opt stack 0
   591  000400                     _delay:
   592                           	opt stack 27
   593                           
   594                           ;main.c: 54: uint16_t a,b;
   595                           ;main.c: 55: for(a=x;a>0;a--)
   596                           
   597                           ;incstack = 0
   598  000400  C060  F062         	movff	delay@x,delay@a
   599  000404  C061  F063         	movff	delay@x+1,delay@a+1
   600  000408                     l1532:
   601  000408  0100               	movlb	0	; () banked
   602  00040A  5162               	movf	delay@a& (0+255),w,b
   603  00040C  0100               	movlb	0	; () banked
   604  00040E  1163               	iorwf	(delay@a+1)& (0+255),w,b
   605  000410  B4D8               	btfsc	status,2,c
   606  000412  0012               	return	
   607                           
   608                           ; BSR set to: 0
   609                           ;main.c: 56: for(b=110;b>0;b--);
   610                           
   611                           ; BSR set to: 0
   612                           
   613                           ; BSR set to: 0
   614  000414  0E00               	movlw	0
   615  000416  0100               	movlb	0	; () banked
   616  000418  6F65               	movwf	(delay@b+1)& (0+255),b
   617  00041A  0E6E               	movlw	110
   618  00041C  6F64               	movwf	delay@b& (0+255),b
   619  00041E                     l1538:
   620                           
   621                           ; BSR set to: 0
   622  00041E  0100               	movlb	0	; () banked
   623  000420  5164               	movf	delay@b& (0+255),w,b
   624  000422  0100               	movlb	0	; () banked
   625  000424  1165               	iorwf	(delay@b+1)& (0+255),w,b
   626  000426  B4D8               	btfsc	status,2,c
   627  000428  D005               	goto	l1546
   628                           
   629                           ; BSR set to: 0
   630                           
   631                           ; BSR set to: 0
   632                           
   633                           ; BSR set to: 0
   634  00042A  0100               	movlb	0	; () banked
   635  00042C  0764               	decf	delay@b& (0+255),f,b
   636  00042E  A0D8               	btfss	status,0,c
   637  000430  0765               	decf	(delay@b+1)& (0+255),f,b
   638  000432  D7F5               	goto	l1538
   639  000434                     l1546:
   640                           
   641                           ; BSR set to: 0
   642  000434  0100               	movlb	0	; () banked
   643  000436  0762               	decf	delay@a& (0+255),f,b
   644  000438  A0D8               	btfss	status,0,c
   645  00043A  0763               	decf	(delay@a+1)& (0+255),f,b
   646  00043C  D7E5               	goto	l1532
   647  00043E                     __end_of_delay:
   648                           	opt stack 0
   649                           prodh	equ	0xFF4
   650                           prodl	equ	0xFF3
   651                           intcon	equ	0xFF2
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           indf2	equ	0xFDF
   655                           fsr2h	equ	0xFDA
   656                           fsr2l	equ	0xFD9
   657                           status	equ	0xFD8
   658                           
   659 ;; *************** function _SYSTEM_Initialize *****************
   660 ;; Defined at:
   661 ;;		line 113 in file "mcc_generated_files/mcc.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    5
   682 ;; This function calls:
   683 ;;		_EUSART1_Initialize
   684 ;;		_INTERRUPT_Initialize
   685 ;;		_OSCILLATOR_Initialize
   686 ;;		_PIN_MANAGER_Initialize
   687 ;;		_TMR1_Initialize
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text2
   694  0004C4                     __ptext2:
   695                           	opt stack 0
   696  0004C4                     _SYSTEM_Initialize:
   697                           	opt stack 25
   698                           
   699                           ;mcc.c: 114: OSCILLATOR_Initialize();
   700                           
   701                           ; BSR set to: 0
   702                           ;incstack = 0
   703  0004C4  EC76  F002         	call	_OSCILLATOR_Initialize	;wreg free
   704                           
   705                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   706  0004C8  EC47  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   707                           
   708                           ;mcc.c: 116: INTERRUPT_Initialize();
   709  0004CC  EC7D  F002         	call	_INTERRUPT_Initialize	;wreg free
   710                           
   711                           ;mcc.c: 117: EUSART1_Initialize();
   712  0004D0  ECE0  F001         	call	_EUSART1_Initialize	;wreg free
   713                           
   714                           ;mcc.c: 118: TMR1_Initialize();
   715  0004D4  EC36  F002         	call	_TMR1_Initialize	;wreg free
   716  0004D8  0012               	return		;funcret
   717  0004DA                     __end_of_SYSTEM_Initialize:
   718                           	opt stack 0
   719                           prodh	equ	0xFF4
   720                           prodl	equ	0xFF3
   721                           intcon	equ	0xFF2
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           indf2	equ	0xFDF
   725                           fsr2h	equ	0xFDA
   726                           fsr2l	equ	0xFD9
   727                           status	equ	0xFD8
   728                           
   729 ;; *************** function _TMR1_Initialize *****************
   730 ;; Defined at:
   731 ;;		line 64 in file "mcc_generated_files/tmr1.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    4
   752 ;; This function calls:
   753 ;;		_TMR1_StartTimer
   754 ;; This function is called by:
   755 ;;		_SYSTEM_Initialize
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text3
   760  00046C                     __ptext3:
   761                           	opt stack 0
   762  00046C                     _TMR1_Initialize:
   763                           	opt stack 25
   764                           
   765                           ;tmr1.c: 68: T1CON = 0x00;
   766                           
   767                           ;incstack = 0
   768  00046C  0E00               	movlw	0
   769  00046E  6ECD               	movwf	4045,c	;volatile
   770                           
   771                           ;tmr1.c: 71: T1GCON = 0x00;
   772  000470  0E00               	movlw	0
   773  000472  6EAA               	movwf	4010,c	;volatile
   774                           
   775                           ;tmr1.c: 74: TMR1H = 0x63;
   776  000474  0E63               	movlw	99
   777  000476  6ECF               	movwf	4047,c	;volatile
   778                           
   779                           ;tmr1.c: 77: TMR1L = 0xC0;
   780  000478  0EC0               	movlw	192
   781  00047A  6ECE               	movwf	4046,c	;volatile
   782                           
   783                           ;tmr1.c: 80: timer1ReloadVal = TMR1;
   784  00047C  CFCE F04E          	movff	4046,_timer1ReloadVal	;volatile
   785  000480  CFCF F04F          	movff	4047,_timer1ReloadVal+1	;volatile
   786                           
   787                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
   788  000484  909E               	bcf	3998,0,c	;volatile
   789                           
   790                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
   791  000486  809D               	bsf	3997,0,c	;volatile
   792                           
   793                           ;tmr1.c: 89: TMR1_StartTimer();
   794  000488  EC87  F002         	call	_TMR1_StartTimer	;wreg free
   795  00048C  0012               	return		;funcret
   796  00048E                     __end_of_TMR1_Initialize:
   797                           	opt stack 0
   798                           prodh	equ	0xFF4
   799                           prodl	equ	0xFF3
   800                           intcon	equ	0xFF2
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           indf2	equ	0xFDF
   804                           fsr2h	equ	0xFDA
   805                           fsr2l	equ	0xFD9
   806                           status	equ	0xFD8
   807                           
   808 ;; *************** function _TMR1_StartTimer *****************
   809 ;; Defined at:
   810 ;;		line 92 in file "mcc_generated_files/tmr1.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2   65[None  ] int 
   817 ;; Registers used:
   818 ;;		None
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    3
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_TMR1_Initialize
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text4
   839  00050E                     __ptext4:
   840                           	opt stack 0
   841  00050E                     _TMR1_StartTimer:
   842                           	opt stack 25
   843                           
   844                           ;tmr1.c: 94: T1CONbits.TMR1ON = 1;
   845                           
   846                           ;incstack = 0
   847  00050E  80CD               	bsf	4045,0,c	;volatile
   848  000510  0012               	return		;funcret
   849  000512                     __end_of_TMR1_StartTimer:
   850                           	opt stack 0
   851                           prodh	equ	0xFF4
   852                           prodl	equ	0xFF3
   853                           intcon	equ	0xFF2
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           indf2	equ	0xFDF
   857                           fsr2h	equ	0xFDA
   858                           fsr2l	equ	0xFD9
   859                           status	equ	0xFD8
   860                           
   861 ;; *************** function _PIN_MANAGER_Initialize *****************
   862 ;; Defined at:
   863 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    3
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_SYSTEM_Initialize
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text5
   892  00048E                     __ptext5:
   893                           	opt stack 0
   894  00048E                     _PIN_MANAGER_Initialize:
   895                           	opt stack 26
   896                           
   897                           ;pin_manager.c: 51: LATA = 0x00;
   898                           
   899                           ;incstack = 0
   900  00048E  0E00               	movlw	0
   901  000490  6E89               	movwf	3977,c	;volatile
   902                           
   903                           ;pin_manager.c: 52: TRISA = 0xFF;
   904  000492  6892               	setf	3986,c	;volatile
   905                           
   906                           ;pin_manager.c: 55: LATB = 0x00;
   907  000494  0E00               	movlw	0
   908  000496  6E8A               	movwf	3978,c	;volatile
   909                           
   910                           ;pin_manager.c: 56: TRISB = 0xFE;
   911  000498  0EFE               	movlw	254
   912  00049A  6E93               	movwf	3987,c	;volatile
   913                           
   914                           ;pin_manager.c: 58: WPUB = 0x00;
   915  00049C  0E00               	movlw	0
   916  00049E  010F               	movlb	15	; () banked
   917  0004A0  6F5B               	movwf	91,b	;volatile
   918                           
   919                           ;pin_manager.c: 60: LATC = 0x00;
   920  0004A2  0E00               	movlw	0
   921  0004A4  6E8B               	movwf	3979,c	;volatile
   922                           
   923                           ;pin_manager.c: 61: TRISC = 0xE3;
   924  0004A6  0EE3               	movlw	227
   925  0004A8  6E94               	movwf	3988,c	;volatile
   926                           
   927                           ; BSR set to: 15
   928                           ;pin_manager.c: 64: INTCON2bits.nRBPU = 0x01;
   929  0004AA  8EF1               	bsf	intcon2,7,c	;volatile
   930                           
   931                           ; BSR set to: 15
   932  0004AC  0012               	return		;funcret
   933  0004AE                     __end_of_PIN_MANAGER_Initialize:
   934                           	opt stack 0
   935                           prodh	equ	0xFF4
   936                           prodl	equ	0xFF3
   937                           intcon	equ	0xFF2
   938                           intcon2	equ	0xFF1
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           indf2	equ	0xFDF
   942                           fsr2h	equ	0xFDA
   943                           fsr2l	equ	0xFD9
   944                           status	equ	0xFD8
   945                           
   946 ;; *************** function _OSCILLATOR_Initialize *****************
   947 ;; Defined at:
   948 ;;		line 121 in file "mcc_generated_files/mcc.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    3
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_SYSTEM_Initialize
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text6
   977  0004EC                     __ptext6:
   978                           	opt stack 0
   979  0004EC                     _OSCILLATOR_Initialize:
   980                           	opt stack 26
   981                           
   982                           ;mcc.c: 123: OSCCON = 0x7C;
   983                           
   984                           ; BSR set to: 15
   985                           ;incstack = 0
   986  0004EC  0E7C               	movlw	124
   987  0004EE  6ED3               	movwf	4051,c	;volatile
   988                           
   989                           ;mcc.c: 125: OSCCON2 = 0x04;
   990  0004F0  0E04               	movlw	4
   991  0004F2  6ED2               	movwf	4050,c	;volatile
   992                           
   993                           ;mcc.c: 127: OSCTUNE = 0x40;
   994  0004F4  0E40               	movlw	64
   995  0004F6  6E9B               	movwf	3995,c	;volatile
   996  0004F8  0012               	return		;funcret
   997  0004FA                     __end_of_OSCILLATOR_Initialize:
   998                           	opt stack 0
   999                           prodh	equ	0xFF4
  1000                           prodl	equ	0xFF3
  1001                           intcon	equ	0xFF2
  1002                           intcon2	equ	0xFF1
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           indf2	equ	0xFDF
  1006                           fsr2h	equ	0xFDA
  1007                           fsr2l	equ	0xFD9
  1008                           status	equ	0xFD8
  1009                           
  1010 ;; *************** function _INTERRUPT_Initialize *****************
  1011 ;; Defined at:
  1012 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		None
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    3
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_SYSTEM_Initialize
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text7
  1041  0004FA                     __ptext7:
  1042                           	opt stack 0
  1043  0004FA                     _INTERRUPT_Initialize:
  1044                           	opt stack 26
  1045                           
  1046                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1047                           
  1048                           ;incstack = 0
  1049  0004FA  9ED0               	bcf	4048,7,c	;volatile
  1050                           
  1051                           ;interrupt_manager.c: 59: IPR1bits.RC1IP = 0;
  1052  0004FC  9A9F               	bcf	3999,5,c	;volatile
  1053                           
  1054                           ;interrupt_manager.c: 61: IPR1bits.TX1IP = 0;
  1055  0004FE  989F               	bcf	3999,4,c	;volatile
  1056                           
  1057                           ;interrupt_manager.c: 63: IPR1bits.TMR1IP = 0;
  1058  000500  909F               	bcf	3999,0,c	;volatile
  1059  000502  0012               	return		;funcret
  1060  000504                     __end_of_INTERRUPT_Initialize:
  1061                           	opt stack 0
  1062                           prodh	equ	0xFF4
  1063                           prodl	equ	0xFF3
  1064                           intcon	equ	0xFF2
  1065                           intcon2	equ	0xFF1
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           indf2	equ	0xFDF
  1069                           fsr2h	equ	0xFDA
  1070                           fsr2l	equ	0xFD9
  1071                           status	equ	0xFD8
  1072                           
  1073 ;; *************** function _EUSART1_Initialize *****************
  1074 ;; Defined at:
  1075 ;;		line 81 in file "mcc_generated_files/eusart1.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    4
  1096 ;; This function calls:
  1097 ;;		_TMR1_StopTimer
  1098 ;; This function is called by:
  1099 ;;		_SYSTEM_Initialize
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text8
  1104  0003C0                     __ptext8:
  1105                           	opt stack 0
  1106  0003C0                     _EUSART1_Initialize:
  1107                           	opt stack 25
  1108                           
  1109                           ;eusart1.c: 83: PIE1bits.RC1IE = 0;
  1110                           
  1111                           ;incstack = 0
  1112  0003C0  9A9D               	bcf	3997,5,c	;volatile
  1113                           
  1114                           ;eusart1.c: 84: PIE1bits.TX1IE = 0;
  1115  0003C2  989D               	bcf	3997,4,c	;volatile
  1116                           
  1117                           ;eusart1.c: 89: BAUDCON1 = 0x48;
  1118  0003C4  0E48               	movlw	72
  1119  0003C6  6EA7               	movwf	4007,c	;volatile
  1120                           
  1121                           ;eusart1.c: 92: RCSTA1 = 0x90;
  1122  0003C8  0E90               	movlw	144
  1123  0003CA  6EAB               	movwf	4011,c	;volatile
  1124                           
  1125                           ;eusart1.c: 95: TXSTA1 = 0x26;
  1126  0003CC  0E26               	movlw	38
  1127  0003CE  6EAC               	movwf	4012,c	;volatile
  1128                           
  1129                           ;eusart1.c: 98: SPBRG1 = 0xA0;
  1130  0003D0  0EA0               	movlw	160
  1131  0003D2  6EAF               	movwf	4015,c	;volatile
  1132                           
  1133                           ;eusart1.c: 101: SPBRGH1 = 0x01;
  1134  0003D4  0E01               	movlw	1
  1135  0003D6  6E7D               	movwf	3965,c	;volatile
  1136                           
  1137                           ;eusart1.c: 105: eusart1TxHead = 0;
  1138  0003D8  0E00               	movlw	0
  1139  0003DA  6E30               	movwf	_eusart1TxHead,c
  1140                           
  1141                           ;eusart1.c: 106: eusart1TxTail = 0;
  1142  0003DC  0E00               	movlw	0
  1143  0003DE  6E31               	movwf	_eusart1TxTail,c
  1144                           
  1145                           ;eusart1.c: 107: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  1146  0003E0  0E08               	movlw	8
  1147  0003E2  6E50               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1148                           
  1149                           ;eusart1.c: 109: eusart1RxHead = 0;
  1150  0003E4  0E00               	movlw	0
  1151  0003E6  6E2E               	movwf	_eusart1RxHead,c
  1152                           
  1153                           ;eusart1.c: 110: eusart1RxTail = 0;
  1154  0003E8  0E00               	movlw	0
  1155  0003EA  6E2F               	movwf	_eusart1RxTail,c
  1156                           
  1157                           ;eusart1.c: 111: eusart1RxCount = 0;
  1158  0003EC  0E00               	movlw	0
  1159  0003EE  6E2D               	movwf	_eusart1RxCount,c	;volatile
  1160                           
  1161                           ;eusart1.c: 114: PIE1bits.RC1IE = 1;
  1162  0003F0  8A9D               	bsf	3997,5,c	;volatile
  1163                           
  1164                           ;eusart1.c: 117: USART1_RX_STA = 0;
  1165  0003F2  0E00               	movlw	0
  1166  0003F4  6E2C               	movwf	_USART1_RX_STA+1,c	;volatile
  1167  0003F6  0E00               	movlw	0
  1168  0003F8  6E2B               	movwf	_USART1_RX_STA,c	;volatile
  1169                           
  1170                           ;eusart1.c: 118: TMR1_StopTimer();
  1171  0003FA  EC89  F002         	call	_TMR1_StopTimer	;wreg free
  1172  0003FE  0012               	return		;funcret
  1173  000400                     __end_of_EUSART1_Initialize:
  1174                           	opt stack 0
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           intcon2	equ	0xFF1
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           indf2	equ	0xFDF
  1182                           fsr2h	equ	0xFDA
  1183                           fsr2l	equ	0xFD9
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _TMR1_StopTimer *****************
  1187 ;; Defined at:
  1188 ;;		line 97 in file "mcc_generated_files/tmr1.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2   55[None  ] int 
  1195 ;; Registers used:
  1196 ;;		None
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    3
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_EUSART1_Initialize
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text9
  1217  000512                     __ptext9:
  1218                           	opt stack 0
  1219  000512                     _TMR1_StopTimer:
  1220                           	opt stack 25
  1221                           
  1222                           ;tmr1.c: 99: T1CONbits.TMR1ON = 0;
  1223                           
  1224                           ;incstack = 0
  1225  000512  90CD               	bcf	4045,0,c	;volatile
  1226  000514  0012               	return		;funcret
  1227  000516                     __end_of_TMR1_StopTimer:
  1228                           	opt stack 0
  1229                           prodh	equ	0xFF4
  1230                           prodl	equ	0xFF3
  1231                           intcon	equ	0xFF2
  1232                           intcon2	equ	0xFF1
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           indf2	equ	0xFDF
  1236                           fsr2h	equ	0xFDA
  1237                           fsr2l	equ	0xFD9
  1238                           status	equ	0xFD8
  1239                           
  1240 ;; *************** function _InitECAN *****************
  1241 ;; Defined at:
  1242 ;;		line 109 in file "UserApp/ECAN.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;Total ram usage:        0 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    3
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text10
  1271  00027E                     __ptext10:
  1272                           	opt stack 0
  1273  00027E                     _InitECAN:
  1274                           	opt stack 27
  1275                           
  1276                           ;ECAN.c: 112: CANCON = 0x80;
  1277                           
  1278                           ;incstack = 0
  1279  00027E  0E80               	movlw	128
  1280  000280  6E6F               	movwf	3951,c	;volatile
  1281  000282                     l1472:
  1282  000282  386E               	swapf	3950,w,c	;volatile
  1283  000284  32E8               	rrcf	wreg,f,c
  1284  000286  0B07               	andlw	7
  1285  000288  0A04               	xorlw	4
  1286  00028A  A4D8               	btfss	status,2,c
  1287  00028C  D7FA               	goto	l1472
  1288                           
  1289                           ;ECAN.c: 116: ECANCON = 0x00;
  1290  00028E  0E00               	movlw	0
  1291  000290  6E72               	movwf	3954,c	;volatile
  1292                           
  1293                           ;ECAN.c: 134: {
  1294                           ;ECAN.c: 136: BRGCON1 = 0x83;
  1295                           
  1296                           ; BSR set to: 14
  1297                           
  1298                           ;ECAN.c: 133: else if (1==1)
  1299                           
  1300                           ;ECAN.c: 132: }
  1301                           
  1302                           ;ECAN.c: 131: BRGCON3 = 0x05;
  1303                           
  1304                           ;ECAN.c: 130: BRGCON2 = 0xB8;
  1305                           
  1306                           ; BSR set to: 14
  1307                           ;ECAN.c: 127: {
  1308                           ;ECAN.c: 129: BRGCON1 = 0x8F;
  1309                           
  1310                           ; BSR set to: 14
  1311                           ;ECAN.c: 126: else if (0==1)
  1312                           
  1313                           ;ECAN.c: 125: }
  1314                           
  1315                           ;ECAN.c: 124: BRGCON3 = 0x05;
  1316                           
  1317                           ;ECAN.c: 123: BRGCON2 = 0xB8;
  1318                           
  1319                           ;ECAN.c: 120: {
  1320                           ;ECAN.c: 122: BRGCON1 = 0x93;
  1321                           
  1322                           ;ECAN.c: 119: if (0==1)
  1323  000292  0E83               	movlw	131
  1324                           
  1325                           ; BSR set to: 14
  1326                           ;ECAN.c: 147: else
  1327                           ;ECAN.c: 148: {
  1328                           ;ECAN.c: 150: BRGCON1 = 0x93;
  1329                           
  1330                           ; BSR set to: 14
  1331                           
  1332                           ;ECAN.c: 146: }
  1333                           
  1334                           ;ECAN.c: 145: BRGCON3 = 0x05;
  1335                           
  1336                           ;ECAN.c: 144: BRGCON2 = 0xB8;
  1337                           
  1338                           ; BSR set to: 14
  1339                           ;ECAN.c: 141: {
  1340                           ;ECAN.c: 143: BRGCON1 = 0x81;
  1341                           
  1342                           ; BSR set to: 14
  1343                           ;ECAN.c: 140: else if (0==1)
  1344                           
  1345                           ;ECAN.c: 139: }
  1346                           
  1347                           ;ECAN.c: 138: BRGCON3 = 0x05;
  1348                           
  1349                           ;ECAN.c: 137: BRGCON2 = 0xB8;
  1350  000294  010E               	movlb	14	; () banked
  1351  000296  6F43               	movwf	67,b	;volatile
  1352                           
  1353                           ;ECAN.c: 151: BRGCON2 = 0xB8;
  1354  000298  0EB8               	movlw	184
  1355  00029A  010E               	movlb	14	; () banked
  1356  00029C  6F44               	movwf	68,b	;volatile
  1357                           
  1358                           ;ECAN.c: 152: BRGCON3 = 0x05;
  1359  00029E  0E05               	movlw	5
  1360  0002A0  010E               	movlb	14	; () banked
  1361  0002A2  6F45               	movwf	69,b	;volatile
  1362                           
  1363                           ; BSR set to: 14
  1364                           ;ECAN.c: 153: }
  1365                           ;ECAN.c: 157: RXM0EIDH = 0x00;
  1366                           
  1367                           ; BSR set to: 14
  1368                           
  1369                           ; BSR set to: 14
  1370                           
  1371                           ; BSR set to: 14
  1372  0002A4  0E00               	movlw	0
  1373  0002A6  010E               	movlb	14	; () banked
  1374  0002A8  6FFA               	movwf	250,b	;volatile
  1375                           
  1376                           ;ECAN.c: 158: RXM0EIDL = 0x00;
  1377  0002AA  0E00               	movlw	0
  1378  0002AC  010E               	movlb	14	; () banked
  1379  0002AE  6FFB               	movwf	251,b	;volatile
  1380                           
  1381                           ; BSR set to: 14
  1382                           ;ECAN.c: 159: RXM0SIDH = 0xFF;
  1383  0002B0  010E               	movlb	14	; () banked
  1384  0002B2  69F8               	setf	248,b	;volatile
  1385                           
  1386                           ;ECAN.c: 160: RXM0SIDL = 0xE0;
  1387  0002B4  0EE0               	movlw	224
  1388  0002B6  010E               	movlb	14	; () banked
  1389  0002B8  6FF9               	movwf	249,b	;volatile
  1390                           
  1391                           ;ECAN.c: 163: RXM1EIDH = 0x00;
  1392  0002BA  0E00               	movlw	0
  1393  0002BC  010E               	movlb	14	; () banked
  1394  0002BE  6FFE               	movwf	254,b	;volatile
  1395                           
  1396                           ;ECAN.c: 164: RXM1EIDL = 0x00;
  1397  0002C0  0E00               	movlw	0
  1398  0002C2  010E               	movlb	14	; () banked
  1399  0002C4  6FFF               	movwf	255,b	;volatile
  1400                           
  1401                           ; BSR set to: 14
  1402                           ;ECAN.c: 165: RXM1SIDH = 0xFF;
  1403  0002C6  010E               	movlb	14	; () banked
  1404  0002C8  69FC               	setf	252,b	;volatile
  1405                           
  1406                           ;ECAN.c: 166: RXM1SIDL = 0xE0;
  1407  0002CA  0EE0               	movlw	224
  1408  0002CC  010E               	movlb	14	; () banked
  1409  0002CE  6FFD               	movwf	253,b	;volatile
  1410                           
  1411                           ;ECAN.c: 170: RXFCON0 = 0x03;
  1412  0002D0  0E03               	movlw	3
  1413  0002D2  010E               	movlb	14	; () banked
  1414  0002D4  6F46               	movwf	70,b	;volatile
  1415                           
  1416                           ;ECAN.c: 171: RXFCON1 = 0x00;
  1417  0002D6  0E00               	movlw	0
  1418  0002D8  010E               	movlb	14	; () banked
  1419  0002DA  6F47               	movwf	71,b	;volatile
  1420                           
  1421                           ;ECAN.c: 177: RXF0EIDH = 0x00;
  1422  0002DC  0E00               	movlw	0
  1423  0002DE  010E               	movlb	14	; () banked
  1424  0002E0  6FE2               	movwf	226,b	;volatile
  1425                           
  1426                           ;ECAN.c: 178: RXF0EIDL = 0x00;
  1427  0002E2  0E00               	movlw	0
  1428  0002E4  010E               	movlb	14	; () banked
  1429  0002E6  6FE3               	movwf	227,b	;volatile
  1430                           
  1431                           ;ECAN.c: 179: RXF0SIDH = 0x32;
  1432  0002E8  0E32               	movlw	50
  1433  0002EA  010E               	movlb	14	; () banked
  1434  0002EC  6FE0               	movwf	224,b	;volatile
  1435                           
  1436                           ;ECAN.c: 180: RXF0SIDL = 0xC0;
  1437  0002EE  0EC0               	movlw	192
  1438  0002F0  010E               	movlb	14	; () banked
  1439  0002F2  6FE1               	movwf	225,b	;volatile
  1440                           
  1441                           ;ECAN.c: 182: RXF2EIDH = 0x00;
  1442  0002F4  0E00               	movlw	0
  1443  0002F6  010E               	movlb	14	; () banked
  1444  0002F8  6FEA               	movwf	234,b	;volatile
  1445                           
  1446                           ;ECAN.c: 183: RXF2EIDL = 0x00;
  1447  0002FA  0E00               	movlw	0
  1448  0002FC  010E               	movlb	14	; () banked
  1449  0002FE  6FEB               	movwf	235,b	;volatile
  1450                           
  1451                           ;ECAN.c: 184: RXF2SIDH = 0x33;
  1452  000300  0E33               	movlw	51
  1453  000302  010E               	movlb	14	; () banked
  1454  000304  6FE8               	movwf	232,b	;volatile
  1455                           
  1456                           ;ECAN.c: 185: RXF2SIDL = 0xC0;
  1457  000306  0EC0               	movlw	192
  1458  000308  010E               	movlb	14	; () banked
  1459  00030A  6FE9               	movwf	233,b	;volatile
  1460                           
  1461                           ;ECAN.c: 189: CANCON = 0x00;
  1462  00030C  0E00               	movlw	0
  1463  00030E  6E6F               	movwf	3951,c	;volatile
  1464  000310                     l1490:
  1465  000310  386E               	swapf	3950,w,c	;volatile
  1466  000312  32E8               	rrcf	wreg,f,c
  1467  000314  0B07               	andlw	7
  1468  000316  0900               	iorlw	0
  1469  000318  B4D8               	btfsc	status,2,c
  1470  00031A  D7FA               	goto	l1490
  1471                           
  1472                           ;ECAN.c: 193: RXB0CON = 0x00;
  1473  00031C  0E00               	movlw	0
  1474  00031E  6E60               	movwf	3936,c	;volatile
  1475                           
  1476                           ;ECAN.c: 194: RXB1CON = 0x00;
  1477  000320  0E00               	movlw	0
  1478  000322  010F               	movlb	15	; () banked
  1479  000324  6F30               	movwf	48,b	;volatile
  1480                           
  1481                           ; BSR set to: 15
  1482  000326  0012               	return		;funcret
  1483  000328                     __end_of_InitECAN:
  1484                           	opt stack 0
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           intcon	equ	0xFF2
  1488                           intcon2	equ	0xFF1
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           indf2	equ	0xFDF
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _ECAN_Transmit *****************
  1497 ;; Defined at:
  1498 ;;		line 284 in file "UserApp/ECAN.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    3
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text11
  1527  000328                     __ptext11:
  1528                           	opt stack 0
  1529  000328                     _ECAN_Transmit:
  1530                           	opt stack 27
  1531                           
  1532                           ;ECAN.c: 286: TXB0EIDH = 0x00;
  1533                           
  1534                           ; BSR set to: 15
  1535                           ;incstack = 0
  1536  000328  0E00               	movlw	0
  1537  00032A  010F               	movlb	15	; () banked
  1538  00032C  6F23               	movwf	35,b	;volatile
  1539                           
  1540                           ;ECAN.c: 287: TXB0EIDL = 0x00;
  1541  00032E  0E00               	movlw	0
  1542  000330  010F               	movlb	15	; () banked
  1543  000332  6F24               	movwf	36,b	;volatile
  1544                           
  1545                           ;ECAN.c: 290: TXB0SIDH = 0x6B;
  1546  000334  0E6B               	movlw	107
  1547  000336  010F               	movlb	15	; () banked
  1548  000338  6F21               	movwf	33,b	;volatile
  1549                           
  1550                           ;ECAN.c: 291: TXB0SIDL = 0xC0;
  1551  00033A  0EC0               	movlw	192
  1552  00033C  010F               	movlb	15	; () banked
  1553  00033E  6F22               	movwf	34,b	;volatile
  1554                           
  1555                           ;ECAN.c: 293: TXB0DLC = 0x03;
  1556  000340  0E03               	movlw	3
  1557  000342  010F               	movlb	15	; () banked
  1558  000344  6F25               	movwf	37,b	;volatile
  1559                           
  1560                           ;ECAN.c: 294: TXB0D0 = 0xAA;
  1561  000346  0EAA               	movlw	170
  1562  000348  010F               	movlb	15	; () banked
  1563  00034A  6F26               	movwf	38,b	;volatile
  1564                           
  1565                           ;ECAN.c: 295: TXB0D1 = 0xCC;
  1566  00034C  0ECC               	movlw	204
  1567  00034E  010F               	movlb	15	; () banked
  1568  000350  6F27               	movwf	39,b	;volatile
  1569                           
  1570                           ;ECAN.c: 296: TXB0D2 = 0x55;
  1571  000352  0E55               	movlw	85
  1572  000354  010F               	movlb	15	; () banked
  1573  000356  6F28               	movwf	40,b	;volatile
  1574                           
  1575                           ;ECAN.c: 297: TXB0D3 = 0x00;
  1576  000358  0E00               	movlw	0
  1577  00035A  010F               	movlb	15	; () banked
  1578  00035C  6F29               	movwf	41,b	;volatile
  1579                           
  1580                           ;ECAN.c: 298: TXB0D4 = 0x00;
  1581  00035E  0E00               	movlw	0
  1582  000360  010F               	movlb	15	; () banked
  1583  000362  6F2A               	movwf	42,b	;volatile
  1584                           
  1585                           ;ECAN.c: 299: TXB0D5 = 0x00;
  1586  000364  0E00               	movlw	0
  1587  000366  010F               	movlb	15	; () banked
  1588  000368  6F2B               	movwf	43,b	;volatile
  1589                           
  1590                           ;ECAN.c: 300: TXB0D6 = 0x00;
  1591  00036A  0E00               	movlw	0
  1592  00036C  010F               	movlb	15	; () banked
  1593  00036E  6F2C               	movwf	44,b	;volatile
  1594                           
  1595                           ;ECAN.c: 301: TXB0D7 = 0x00;
  1596  000370  0E00               	movlw	0
  1597  000372  010F               	movlb	15	; () banked
  1598  000374  6F2D               	movwf	45,b	;volatile
  1599                           
  1600                           ; BSR set to: 15
  1601                           ;ECAN.c: 303: TXB0CONbits.TXREQ = 1;
  1602  000376  010F               	movlb	15	; () banked
  1603  000378  8720               	bsf	32,3,b	;volatile
  1604                           
  1605                           ; BSR set to: 15
  1606  00037A  0012               	return		;funcret
  1607  00037C                     __end_of_ECAN_Transmit:
  1608                           	opt stack 0
  1609                           prodh	equ	0xFF4
  1610                           prodl	equ	0xFF3
  1611                           intcon	equ	0xFF2
  1612                           intcon2	equ	0xFF1
  1613                           postinc0	equ	0xFEE
  1614                           wreg	equ	0xFE8
  1615                           indf2	equ	0xFDF
  1616                           fsr2h	equ	0xFDA
  1617                           fsr2l	equ	0xFD9
  1618                           status	equ	0xFD8
  1619                           
  1620 ;; *************** function _ECAN_Receive *****************
  1621 ;; Defined at:
  1622 ;;		line 203 in file "UserApp/ECAN.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  RXMsgFlag       1    0[BANK0 ] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      unsigned char 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;Total ram usage:        1 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    3
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text12
  1651  0001A0                     __ptext12:
  1652                           	opt stack 0
  1653  0001A0                     _ECAN_Receive:
  1654                           	opt stack 27
  1655                           
  1656                           ;ECAN.c: 205: unsigned char RXMsgFlag;
  1657                           ;ECAN.c: 207: RXMsgFlag = 0x00;
  1658                           
  1659                           ; BSR set to: 15
  1660                           ;incstack = 0
  1661  0001A0  0E00               	movlw	0
  1662  0001A2  0100               	movlb	0	; () banked
  1663  0001A4  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;ECAN.c: 209: if (RXB0CONbits.RXFUL)
  1667  0001A6  AE60               	btfss	3936,7,c	;volatile
  1668  0001A8  D01C               	goto	l409
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;ECAN.c: 210: {
  1672                           ;ECAN.c: 211: temp_EIDH = RXB0EIDH;
  1673  0001AA  CF63 F03B          	movff	3939,_temp_EIDH	;volatile
  1674                           
  1675                           ;ECAN.c: 212: temp_EIDL = RXB0EIDL;
  1676  0001AE  CF64 F03C          	movff	3940,_temp_EIDL	;volatile
  1677                           
  1678                           ;ECAN.c: 213: temp_SIDH = RXB0SIDH;
  1679  0001B2  CF61 F03D          	movff	3937,_temp_SIDH	;volatile
  1680                           
  1681                           ;ECAN.c: 214: temp_SIDL = RXB0SIDL;
  1682  0001B6  CF62 F03E          	movff	3938,_temp_SIDL	;volatile
  1683                           
  1684                           ;ECAN.c: 215: temp_DLC = RXB0DLC;
  1685  0001BA  CF65 F03A          	movff	3941,_temp_DLC	;volatile
  1686                           
  1687                           ;ECAN.c: 216: temp_D0 = RXB0D0;
  1688  0001BE  CF66 F032          	movff	3942,_temp_D0	;volatile
  1689                           
  1690                           ;ECAN.c: 217: temp_D1 = RXB0D1;
  1691  0001C2  CF67 F033          	movff	3943,_temp_D1	;volatile
  1692                           
  1693                           ;ECAN.c: 218: temp_D2 = RXB0D2;
  1694  0001C6  CF68 F034          	movff	3944,_temp_D2	;volatile
  1695                           
  1696                           ;ECAN.c: 219: temp_D3 = RXB0D3;
  1697  0001CA  CF69 F035          	movff	3945,_temp_D3	;volatile
  1698                           
  1699                           ;ECAN.c: 220: temp_D4 = RXB0D4;
  1700  0001CE  CF6A F036          	movff	3946,_temp_D4	;volatile
  1701                           
  1702                           ;ECAN.c: 221: temp_D5 = RXB0D5;
  1703  0001D2  CF6B F037          	movff	3947,_temp_D5	;volatile
  1704                           
  1705                           ;ECAN.c: 222: temp_D6 = RXB0D6;
  1706  0001D6  CF6C F038          	movff	3948,_temp_D6	;volatile
  1707                           
  1708                           ;ECAN.c: 223: temp_D7 = RXB0D7;
  1709  0001DA  CF6D F039          	movff	3949,_temp_D7	;volatile
  1710                           
  1711                           ;ECAN.c: 224: RXB0CONbits.RXFUL = 0;
  1712  0001DE  9E60               	bcf	3936,7,c	;volatile
  1713  0001E0  D03F               	goto	l1508
  1714  0001E2                     l409:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;ECAN.c: 227: else if (RXB1CONbits.RXFUL)
  1718  0001E2  010F               	movlb	15	; () banked
  1719  0001E4  AF30               	btfss	48,7,b	;volatile
  1720  0001E6  D01D               	goto	l411
  1721                           
  1722                           ; BSR set to: 15
  1723                           ;ECAN.c: 228: {
  1724                           ;ECAN.c: 229: temp_EIDH = RXB1EIDH;
  1725  0001E8  CF33 F03B          	movff	3891,_temp_EIDH	;volatile
  1726                           
  1727                           ;ECAN.c: 230: temp_EIDL = RXB1EIDL;
  1728  0001EC  CF34 F03C          	movff	3892,_temp_EIDL	;volatile
  1729                           
  1730                           ;ECAN.c: 231: temp_SIDH = RXB1SIDH;
  1731  0001F0  CF31 F03D          	movff	3889,_temp_SIDH	;volatile
  1732                           
  1733                           ;ECAN.c: 232: temp_SIDL = RXB1SIDL;
  1734  0001F4  CF32 F03E          	movff	3890,_temp_SIDL	;volatile
  1735                           
  1736                           ;ECAN.c: 233: temp_DLC = RXB1DLC;
  1737  0001F8  CF35 F03A          	movff	3893,_temp_DLC	;volatile
  1738                           
  1739                           ;ECAN.c: 234: temp_D0 = RXB1D0;
  1740  0001FC  CF36 F032          	movff	3894,_temp_D0	;volatile
  1741                           
  1742                           ;ECAN.c: 235: temp_D1 = RXB1D1;
  1743  000200  CF37 F033          	movff	3895,_temp_D1	;volatile
  1744                           
  1745                           ;ECAN.c: 236: temp_D2 = RXB1D2;
  1746  000204  CF38 F034          	movff	3896,_temp_D2	;volatile
  1747                           
  1748                           ;ECAN.c: 237: temp_D3 = RXB1D3;
  1749  000208  CF39 F035          	movff	3897,_temp_D3	;volatile
  1750                           
  1751                           ;ECAN.c: 238: temp_D4 = RXB1D4;
  1752  00020C  CF3A F036          	movff	3898,_temp_D4	;volatile
  1753                           
  1754                           ;ECAN.c: 239: temp_D5 = RXB1D5;
  1755  000210  CF3B F037          	movff	3899,_temp_D5	;volatile
  1756                           
  1757                           ;ECAN.c: 240: temp_D6 = RXB1D6;
  1758  000214  CF3C F038          	movff	3900,_temp_D6	;volatile
  1759                           
  1760                           ;ECAN.c: 241: temp_D7 = RXB1D7;
  1761  000218  CF3D F039          	movff	3901,_temp_D7	;volatile
  1762                           
  1763                           ;ECAN.c: 242: RXB1CONbits.RXFUL = 0;
  1764  00021C  010F               	movlb	15	; () banked
  1765  00021E  9F30               	bcf	48,7,b	;volatile
  1766  000220  D01F               	goto	l1508
  1767  000222                     l411:
  1768                           
  1769                           ; BSR set to: 15
  1770                           ;ECAN.c: 245: else if (B0CONbits.RXFUL)
  1771  000222  010E               	movlb	14	; () banked
  1772  000224  AF80               	btfss	128,7,b	;volatile
  1773  000226  D01F               	goto	l1510
  1774                           
  1775                           ; BSR set to: 14
  1776                           ;ECAN.c: 246: {
  1777                           ;ECAN.c: 247: temp_EIDH = B0EIDH;
  1778  000228  CE83 F03B          	movff	3715,_temp_EIDH	;volatile
  1779                           
  1780                           ;ECAN.c: 248: temp_EIDL = B0EIDL;
  1781  00022C  CE84 F03C          	movff	3716,_temp_EIDL	;volatile
  1782                           
  1783                           ;ECAN.c: 249: temp_SIDH = B0SIDH;
  1784  000230  CE81 F03D          	movff	3713,_temp_SIDH	;volatile
  1785                           
  1786                           ;ECAN.c: 250: temp_SIDL = B0SIDL;
  1787  000234  CE82 F03E          	movff	3714,_temp_SIDL	;volatile
  1788                           
  1789                           ;ECAN.c: 251: temp_DLC = B0DLC;
  1790  000238  CE85 F03A          	movff	3717,_temp_DLC	;volatile
  1791                           
  1792                           ;ECAN.c: 252: temp_D0 = B0D0;
  1793  00023C  CE86 F032          	movff	3718,_temp_D0	;volatile
  1794                           
  1795                           ;ECAN.c: 253: temp_D1 = B0D1;
  1796  000240  CE87 F033          	movff	3719,_temp_D1	;volatile
  1797                           
  1798                           ;ECAN.c: 254: temp_D2 = B0D2;
  1799  000244  CE88 F034          	movff	3720,_temp_D2	;volatile
  1800                           
  1801                           ;ECAN.c: 255: temp_D3 = B0D3;
  1802  000248  CE89 F035          	movff	3721,_temp_D3	;volatile
  1803                           
  1804                           ;ECAN.c: 256: temp_D4 = B0D4;
  1805  00024C  CE8A F036          	movff	3722,_temp_D4	;volatile
  1806                           
  1807                           ;ECAN.c: 257: temp_D5 = B0D5;
  1808  000250  CE8B F037          	movff	3723,_temp_D5	;volatile
  1809                           
  1810                           ;ECAN.c: 258: temp_D6 = B0D6;
  1811  000254  CE8C F038          	movff	3724,_temp_D6	;volatile
  1812                           
  1813                           ;ECAN.c: 259: temp_D7 = B0D7;
  1814  000258  CE8D F039          	movff	3725,_temp_D7	;volatile
  1815                           
  1816                           ;ECAN.c: 261: B0CONbits.RXFUL = 0;
  1817  00025C  010E               	movlb	14	; () banked
  1818  00025E  9F80               	bcf	128,7,b	;volatile
  1819  000260                     l1508:
  1820                           
  1821                           ; BSR set to: 14
  1822                           ;ECAN.c: 262: RXMsgFlag = 0x01;
  1823  000260  0E01               	movlw	1
  1824  000262  0100               	movlb	0	; () banked
  1825  000264  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1826  000266                     l1510:
  1827                           
  1828                           ;ECAN.c: 263: }
  1829                           ;ECAN.c: 265: if (RXMsgFlag == 0x01)
  1830  000266  0100               	movlb	0	; () banked
  1831  000268  0560               	decf	ECAN_Receive@RXMsgFlag& (0+255),w,b
  1832  00026A  A4D8               	btfss	status,2,c
  1833  00026C  D006               	goto	l1522
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;ECAN.c: 266: {
  1837                           ;ECAN.c: 267: RXMsgFlag = 0x00;
  1838  00026E  0E00               	movlw	0
  1839  000270  0100               	movlb	0	; () banked
  1840  000272  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;ECAN.c: 268: PIR5bits.RXB1IF = 0;
  1844  000274  9277               	bcf	3959,1,c	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;ECAN.c: 269: return 1;
  1848  000276  0E01               	movlw	1
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;ECAN.c: 270: }
  1852                           
  1853                           ; BSR set to: 0
  1854  000278  0012               	return	
  1855  00027A                     l1522:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;ECAN.c: 271: else
  1859                           ;ECAN.c: 272: {
  1860                           ;ECAN.c: 273: return 0;
  1861  00027A  0E00               	movlw	0
  1862                           
  1863                           ; BSR set to: 0
  1864  00027C  0012               	return	
  1865  00027E                     __end_of_ECAN_Receive:
  1866                           	opt stack 0
  1867                           prodh	equ	0xFF4
  1868                           prodl	equ	0xFF3
  1869                           intcon	equ	0xFF2
  1870                           intcon2	equ	0xFF1
  1871                           postinc0	equ	0xFEE
  1872                           wreg	equ	0xFE8
  1873                           indf2	equ	0xFDF
  1874                           fsr2h	equ	0xFDA
  1875                           fsr2l	equ	0xFD9
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function _INTERRUPT_InterruptManager *****************
  1879 ;; Defined at:
  1880 ;;		line 66 in file "mcc_generated_files/interrupt_manager.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;Total ram usage:       14 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		_EUSART1_Receive_ISR
  1903 ;;		_EUSART1_Transmit_ISR
  1904 ;;		_TMR1_ISR
  1905 ;; This function is called by:
  1906 ;;		Interrupt level 2
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	intcode
  1911  000008                     __pintcode:
  1912                           	opt stack 0
  1913  000008                     _INTERRUPT_InterruptManager:
  1914                           	opt stack 25
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;incstack = 0
  1918  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1919  00000A  CFFA F040          	movff	pclath,??_INTERRUPT_InterruptManager
  1920  00000E  CFFB F041          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1921  000012  CFE9 F042          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1922  000016  CFEA F043          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1923  00001A  CFE1 F044          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1924  00001E  CFE2 F045          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1925  000022  CFD9 F046          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1926  000026  CFDA F047          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1927  00002A  CFF3 F048          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1928  00002E  CFF4 F049          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1929  000032  CFF6 F04A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1930  000036  CFF7 F04B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1931  00003A  CFF8 F04C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1932  00003E  CFF5 F04D          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1933                           
  1934                           ;interrupt_manager.c: 68: if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  1935  000042  BA9D               	btfsc	3997,5,c	;volatile
  1936  000044  AA9E               	btfss	3998,5,c	;volatile
  1937  000046  D003               	goto	i2l138
  1938                           
  1939                           ;interrupt_manager.c: 69: EUSART1_Receive_ISR();
  1940  000048  ECBE  F001         	call	_EUSART1_Receive_ISR	;wreg free
  1941                           
  1942                           ;interrupt_manager.c: 70: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  1943  00004C  D00B               	goto	i2l144
  1944  00004E                     i2l138:
  1945  00004E  B89D               	btfsc	3997,4,c	;volatile
  1946  000050  A89E               	btfss	3998,4,c	;volatile
  1947  000052  D003               	goto	i2l140
  1948                           
  1949                           ;interrupt_manager.c: 71: EUSART1_Transmit_ISR();
  1950  000054  EC1F  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  1951                           
  1952                           ;interrupt_manager.c: 72: } else if (PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  1953  000058  D005               	goto	i2l144
  1954  00005A                     i2l140:
  1955  00005A  B09D               	btfsc	3997,0,c	;volatile
  1956  00005C  A09E               	btfss	3998,0,c	;volatile
  1957  00005E  D002               	goto	i2l144
  1958                           
  1959                           ;interrupt_manager.c: 73: TMR1_ISR();
  1960  000060  EC6D  F002         	call	_TMR1_ISR	;wreg free
  1961  000064                     i2l144:
  1962  000064  C04D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1963  000068  C04C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1964  00006C  C04B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1965  000070  C04A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1966  000074  C049  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1967  000078  C048  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1968  00007C  C047  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1969  000080  C046  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1970  000084  C045  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1971  000088  C044  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1972  00008C  C043  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1973  000090  C042  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1974  000094  C041  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1975  000098  C040  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1976  00009C  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1977  00009E  0011               	retfie		f
  1978  0000A0                     __end_of_INTERRUPT_InterruptManager:
  1979                           	opt stack 0
  1980                           pclatu	equ	0xFFB
  1981                           pclath	equ	0xFFA
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           prodh	equ	0xFF4
  1987                           prodl	equ	0xFF3
  1988                           intcon	equ	0xFF2
  1989                           intcon2	equ	0xFF1
  1990                           postinc0	equ	0xFEE
  1991                           fsr0h	equ	0xFEA
  1992                           fsr0l	equ	0xFE9
  1993                           wreg	equ	0xFE8
  1994                           fsr1h	equ	0xFE2
  1995                           fsr1l	equ	0xFE1
  1996                           indf2	equ	0xFDF
  1997                           fsr2h	equ	0xFDA
  1998                           fsr2l	equ	0xFD9
  1999                           status	equ	0xFD8
  2000                           
  2001 ;; *************** function _TMR1_ISR *****************
  2002 ;; Defined at:
  2003 ;;		line 147 in file "mcc_generated_files/tmr1.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;Total ram usage:        0 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    1
  2024 ;; This function calls:
  2025 ;;		i2_TMR1_StopTimer
  2026 ;; This function is called by:
  2027 ;;		_INTERRUPT_InterruptManager
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text14
  2032  0004DA                     __ptext14:
  2033                           	opt stack 0
  2034  0004DA                     _TMR1_ISR:
  2035                           	opt stack 25
  2036                           
  2037                           ;tmr1.c: 150: PIR1bits.TMR1IF = 0;
  2038                           
  2039                           ;incstack = 0
  2040  0004DA  909E               	bcf	3998,0,c	;volatile
  2041                           
  2042                           ;tmr1.c: 153: TMR1H = (timer1ReloadVal >> 8);
  2043  0004DC  504F               	movf	_timer1ReloadVal+1,w,c	;volatile
  2044  0004DE  6ECF               	movwf	4047,c	;volatile
  2045                           
  2046                           ;tmr1.c: 154: TMR1L = (uint8_t) timer1ReloadVal;
  2047  0004E0  C04E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2048                           
  2049                           ;tmr1.c: 157: USART1_RX_STA|=1<<15;
  2050  0004E4  8E2C               	bsf	_USART1_RX_STA+1,7,c	;volatile
  2051                           
  2052                           ;tmr1.c: 158: TMR1_StopTimer();
  2053  0004E6  EC8B  F002         	call	i2_TMR1_StopTimer	;wreg free
  2054  0004EA  0012               	return		;funcret
  2055  0004EC                     __end_of_TMR1_ISR:
  2056                           	opt stack 0
  2057                           pclatu	equ	0xFFB
  2058                           pclath	equ	0xFFA
  2059                           tblptru	equ	0xFF8
  2060                           tblptrh	equ	0xFF7
  2061                           tblptrl	equ	0xFF6
  2062                           tablat	equ	0xFF5
  2063                           prodh	equ	0xFF4
  2064                           prodl	equ	0xFF3
  2065                           intcon	equ	0xFF2
  2066                           intcon2	equ	0xFF1
  2067                           postinc0	equ	0xFEE
  2068                           fsr0h	equ	0xFEA
  2069                           fsr0l	equ	0xFE9
  2070                           wreg	equ	0xFE8
  2071                           fsr1h	equ	0xFE2
  2072                           fsr1l	equ	0xFE1
  2073                           indf2	equ	0xFDF
  2074                           fsr2h	equ	0xFDA
  2075                           fsr2l	equ	0xFD9
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function i2_TMR1_StopTimer *****************
  2079 ;; Defined at:
  2080 ;;		line 97 in file "mcc_generated_files/tmr1.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2    0[None  ] int 
  2087 ;; Registers used:
  2088 ;;		None
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_TMR1_ISR
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text15
  2108  000516                     __ptext15:
  2109                           	opt stack 0
  2110  000516                     i2_TMR1_StopTimer:
  2111                           	opt stack 25
  2112                           
  2113                           ;tmr1.c: 99: T1CONbits.TMR1ON = 0;
  2114                           
  2115                           ;incstack = 0
  2116  000516  90CD               	bcf	4045,0,c	;volatile
  2117  000518  0012               	return		;funcret
  2118  00051A                     __end_ofi2_TMR1_StopTimer:
  2119                           	opt stack 0
  2120                           pclatu	equ	0xFFB
  2121                           pclath	equ	0xFFA
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           intcon	equ	0xFF2
  2129                           intcon2	equ	0xFF1
  2130                           postinc0	equ	0xFEE
  2131                           fsr0h	equ	0xFEA
  2132                           fsr0l	equ	0xFE9
  2133                           wreg	equ	0xFE8
  2134                           fsr1h	equ	0xFE2
  2135                           fsr1l	equ	0xFE1
  2136                           indf2	equ	0xFDF
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _EUSART1_Transmit_ISR *****************
  2142 ;; Defined at:
  2143 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_INTERRUPT_InterruptManager
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text16
  2171  00043E                     __ptext16:
  2172                           	opt stack 0
  2173  00043E                     _EUSART1_Transmit_ISR:
  2174                           	opt stack 26
  2175                           
  2176                           ;eusart1.c: 160: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  2177                           
  2178                           ;incstack = 0
  2179  00043E  0E08               	movlw	8
  2180  000440  6050               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  2181  000442  D012               	goto	i2l107
  2182                           
  2183                           ;eusart1.c: 161: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  2184  000444  5031               	movf	_eusart1TxTail,w,c
  2185  000446  0D01               	mullw	1
  2186  000448  0E21               	movlw	low _eusart1TxBuffer
  2187  00044A  24F3               	addwf	prodl,w,c
  2188  00044C  6ED9               	movwf	fsr2l,c
  2189  00044E  0E00               	movlw	high _eusart1TxBuffer
  2190  000450  20F4               	addwfc	prodh,w,c
  2191  000452  6EDA               	movwf	fsr2h,c
  2192  000454  50DF               	movf	indf2,w,c
  2193  000456  6EAD               	movwf	4013,c	;volatile
  2194  000458  2A31               	incf	_eusart1TxTail,f,c
  2195                           
  2196                           ;eusart1.c: 162: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  2197  00045A  0E07               	movlw	7
  2198  00045C  6431               	cpfsgt	_eusart1TxTail,c
  2199  00045E  D002               	goto	i2l1118
  2200                           
  2201                           ;eusart1.c: 163: eusart1TxTail = 0;
  2202  000460  0E00               	movlw	0
  2203  000462  6E31               	movwf	_eusart1TxTail,c
  2204  000464                     i2l1118:
  2205                           
  2206                           ;eusart1.c: 164: }
  2207                           ;eusart1.c: 165: eusart1TxBufferRemaining++;
  2208  000464  2A50               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  2209                           
  2210                           ;eusart1.c: 166: } else {
  2211  000466  0012               	return	
  2212  000468                     i2l107:
  2213                           
  2214                           ;eusart1.c: 167: PIE1bits.TX1IE = 0;
  2215  000468  989D               	bcf	3997,4,c	;volatile
  2216  00046A  0012               	return	
  2217  00046C                     __end_of_EUSART1_Transmit_ISR:
  2218                           	opt stack 0
  2219                           pclatu	equ	0xFFB
  2220                           pclath	equ	0xFFA
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           intcon	equ	0xFF2
  2228                           intcon2	equ	0xFF1
  2229                           postinc0	equ	0xFEE
  2230                           fsr0h	equ	0xFEA
  2231                           fsr0l	equ	0xFE9
  2232                           wreg	equ	0xFE8
  2233                           fsr1h	equ	0xFE2
  2234                           fsr1l	equ	0xFE1
  2235                           indf2	equ	0xFDF
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _EUSART1_Receive_ISR *****************
  2241 ;; Defined at:
  2242 ;;		line 171 in file "mcc_generated_files/eusart1.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  res             1    0[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;Total ram usage:        1 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    1
  2263 ;; This function calls:
  2264 ;;		_TMR1_Reload
  2265 ;;		i2_TMR1_StartTimer
  2266 ;; This function is called by:
  2267 ;;		_INTERRUPT_InterruptManager
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text17
  2272  00037C                     __ptext17:
  2273                           	opt stack 0
  2274  00037C                     _EUSART1_Receive_ISR:
  2275                           	opt stack 25
  2276                           
  2277                           ;eusart1.c: 172: uint8_t res;
  2278                           ;eusart1.c: 173: if (1 == RCSTA1bits.OERR) {
  2279                           
  2280                           ;incstack = 0
  2281  00037C  A2AB               	btfss	4011,1,c	;volatile
  2282  00037E  D002               	goto	i2l113
  2283                           
  2284                           ;eusart1.c: 176: RCSTA1bits.CREN = 0;
  2285  000380  98AB               	bcf	4011,4,c	;volatile
  2286                           
  2287                           ;eusart1.c: 177: RCSTA1bits.CREN = 1;
  2288  000382  88AB               	bsf	4011,4,c	;volatile
  2289  000384                     i2l113:
  2290                           
  2291                           ;eusart1.c: 178: }
  2292                           ;eusart1.c: 188: res = RCREG1;
  2293  000384  CFAE F03F          	movff	4014,EUSART1_Receive_ISR@res	;volatile
  2294                           
  2295                           ;eusart1.c: 189: if((USART1_RX_STA&(1<<15))==0)
  2296  000388  BE2C               	btfsc	_USART1_RX_STA+1,7,c	;volatile
  2297  00038A  0012               	return	
  2298                           
  2299                           ;eusart1.c: 190: {
  2300                           ;eusart1.c: 191: if(USART1_RX_STA<24)
  2301  00038C  502C               	movf	_USART1_RX_STA+1,w,c	;volatile
  2302  00038E  E116               	bnz	i2l1136
  2303  000390  0E18               	movlw	24
  2304  000392  5C2B               	subwf	_USART1_RX_STA,w,c	;volatile
  2305  000394  B0D8               	btfsc	status,0,c
  2306  000396  D012               	goto	i2l1136
  2307                           
  2308                           ;eusart1.c: 192: {
  2309                           ;eusart1.c: 193: TMR1_Reload();
  2310  000398  EC82  F002         	call	_TMR1_Reload	;wreg free
  2311                           
  2312                           ;eusart1.c: 194: if(USART1_RX_STA==0)
  2313  00039C  502B               	movf	_USART1_RX_STA,w,c	;volatile
  2314  00039E  102C               	iorwf	_USART1_RX_STA+1,w,c	;volatile
  2315  0003A0  B4D8               	btfsc	status,2,c
  2316                           
  2317                           ;eusart1.c: 195: {
  2318                           ;eusart1.c: 196: TMR1_StartTimer();
  2319  0003A2  EC8D  F002         	call	i2_TMR1_StartTimer	;wreg free
  2320                           
  2321                           ;eusart1.c: 197: }
  2322                           ;eusart1.c: 198: USART1_RX_BUF[USART1_RX_STA++]=res;
  2323  0003A6  0E01               	movlw	low _USART1_RX_BUF
  2324  0003A8  242B               	addwf	_USART1_RX_STA,w,c	;volatile
  2325  0003AA  6ED9               	movwf	fsr2l,c
  2326  0003AC  0E00               	movlw	high _USART1_RX_BUF
  2327  0003AE  202C               	addwfc	_USART1_RX_STA+1,w,c	;volatile
  2328  0003B0  6EDA               	movwf	fsr2h,c
  2329  0003B2  C03F  FFDF         	movff	EUSART1_Receive_ISR@res,indf2
  2330  0003B6  4A2B               	infsnz	_USART1_RX_STA,f,c	;volatile
  2331  0003B8  2A2C               	incf	_USART1_RX_STA+1,f,c	;volatile
  2332                           
  2333                           ;eusart1.c: 199: }else
  2334  0003BA  0012               	return	
  2335  0003BC                     i2l1136:
  2336                           
  2337                           ;eusart1.c: 200: {
  2338                           ;eusart1.c: 201: USART1_RX_STA|=1<<15;
  2339  0003BC  8E2C               	bsf	_USART1_RX_STA+1,7,c	;volatile
  2340  0003BE  0012               	return	
  2341  0003C0                     __end_of_EUSART1_Receive_ISR:
  2342                           	opt stack 0
  2343                           pclatu	equ	0xFFB
  2344                           pclath	equ	0xFFA
  2345                           tblptru	equ	0xFF8
  2346                           tblptrh	equ	0xFF7
  2347                           tblptrl	equ	0xFF6
  2348                           tablat	equ	0xFF5
  2349                           prodh	equ	0xFF4
  2350                           prodl	equ	0xFF3
  2351                           intcon	equ	0xFF2
  2352                           intcon2	equ	0xFF1
  2353                           postinc0	equ	0xFEE
  2354                           fsr0h	equ	0xFEA
  2355                           fsr0l	equ	0xFE9
  2356                           wreg	equ	0xFE8
  2357                           fsr1h	equ	0xFE2
  2358                           fsr1l	equ	0xFE1
  2359                           indf2	equ	0xFDF
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function i2_TMR1_StartTimer *****************
  2365 ;; Defined at:
  2366 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2    0[None  ] int 
  2373 ;; Registers used:
  2374 ;;		None
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_EUSART1_Receive_ISR
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text18
  2394  00051A                     __ptext18:
  2395                           	opt stack 0
  2396  00051A                     i2_TMR1_StartTimer:
  2397                           	opt stack 25
  2398                           
  2399                           ;tmr1.c: 94: T1CONbits.TMR1ON = 1;
  2400                           
  2401                           ;incstack = 0
  2402  00051A  80CD               	bsf	4045,0,c	;volatile
  2403  00051C  0012               	return		;funcret
  2404  00051E                     __end_ofi2_TMR1_StartTimer:
  2405                           	opt stack 0
  2406                           pclatu	equ	0xFFB
  2407                           pclath	equ	0xFFA
  2408                           tblptru	equ	0xFF8
  2409                           tblptrh	equ	0xFF7
  2410                           tblptrl	equ	0xFF6
  2411                           tablat	equ	0xFF5
  2412                           prodh	equ	0xFF4
  2413                           prodl	equ	0xFF3
  2414                           intcon	equ	0xFF2
  2415                           intcon2	equ	0xFF1
  2416                           postinc0	equ	0xFEE
  2417                           fsr0h	equ	0xFEA
  2418                           fsr0l	equ	0xFE9
  2419                           wreg	equ	0xFE8
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           indf2	equ	0xFDF
  2423                           fsr2h	equ	0xFDA
  2424                           fsr2l	equ	0xFD9
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _TMR1_Reload *****************
  2428 ;; Defined at:
  2429 ;;		line 133 in file "mcc_generated_files/tmr1.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   63[None  ] int 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_EUSART1_Receive_ISR
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text19
  2457  000504                     __ptext19:
  2458                           	opt stack 0
  2459  000504                     _TMR1_Reload:
  2460                           	opt stack 25
  2461                           
  2462                           ;tmr1.c: 135: TMR1H = (timer1ReloadVal >> 8);
  2463                           
  2464                           ;incstack = 0
  2465  000504  504F               	movf	_timer1ReloadVal+1,w,c	;volatile
  2466  000506  6ECF               	movwf	4047,c	;volatile
  2467                           
  2468                           ;tmr1.c: 136: TMR1L = (uint8_t) timer1ReloadVal;
  2469  000508  C04E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2470  00050C  0012               	return		;funcret
  2471  00050E                     __end_of_TMR1_Reload:
  2472                           	opt stack 0
  2473  0000                     pclatu	equ	0xFFB
  2474                           pclath	equ	0xFFA
  2475                           tblptru	equ	0xFF8
  2476                           tblptrh	equ	0xFF7
  2477                           tblptrl	equ	0xFF6
  2478                           tablat	equ	0xFF5
  2479                           prodh	equ	0xFF4
  2480                           prodl	equ	0xFF3
  2481                           intcon	equ	0xFF2
  2482                           intcon2	equ	0xFF1
  2483                           postinc0	equ	0xFEE
  2484                           fsr0h	equ	0xFEA
  2485                           fsr0l	equ	0xFE9
  2486                           wreg	equ	0xFE8
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           indf2	equ	0xFDF
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           pclatu	equ	0xFFB
  2494                           pclath	equ	0xFFA
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodh	equ	0xFF4
  2500                           prodl	equ	0xFF3
  2501                           intcon	equ	0xFF2
  2502                           intcon2	equ	0xFF1
  2503                           postinc0	equ	0xFEE
  2504                           fsr0h	equ	0xFEA
  2505                           fsr0l	equ	0xFE9
  2506                           wreg	equ	0xFE8
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           indf2	equ	0xFDF
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514                           	psect	rparam
  2515  0000                     pclatu	equ	0xFFB
  2516                           pclath	equ	0xFFA
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           prodh	equ	0xFF4
  2522                           prodl	equ	0xFF3
  2523                           intcon	equ	0xFF2
  2524                           intcon2	equ	0xFF1
  2525                           postinc0	equ	0xFEE
  2526                           fsr0h	equ	0xFEA
  2527                           fsr0l	equ	0xFE9
  2528                           wreg	equ	0xFE8
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           indf2	equ	0xFDF
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536                           	psect	temp
  2537  000051                     btemp:
  2538                           	opt stack 0
  2539  000051                     	ds	1
  2540  0000                     int$flags	set	btemp
  2541                           pclatu	equ	0xFFB
  2542                           pclath	equ	0xFFA
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodh	equ	0xFF4
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           intcon2	equ	0xFF1
  2551                           postinc0	equ	0xFEE
  2552                           fsr0h	equ	0xFEA
  2553                           fsr0l	equ	0xFE9
  2554                           wreg	equ	0xFE8
  2555                           fsr1h	equ	0xFE2
  2556                           fsr1l	equ	0xFE1
  2557                           indf2	equ	0xFDF
  2558                           fsr2h	equ	0xFDA
  2559                           fsr2l	equ	0xFD9
  2560                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         62
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      80
    BANK0           160     14      14
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR

Critical Paths under _main in BANK0

    _main->_delay

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     418
                                              6 BANK0      8     8      0
                       _ECAN_Receive
                      _ECAN_Transmit
                           _InitECAN
                  _SYSTEM_Initialize
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     4      2     221
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitECAN                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      15
                                              1 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   i2_TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (6) i2_TMR1_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0      15
                                              0 COMRAM     1     1      0
                        _TMR1_Reload
                  i2_TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (6) i2_TMR1_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECAN_Receive
   _ECAN_Transmit
   _InitECAN
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _TMR1_StopTimer
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _delay

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _TMR1_Reload
     i2_TMR1_StartTimer
   _EUSART1_Transmit_ISR
   _TMR1_ISR
     i2_TMR1_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E       E       5        8.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      50       1       85.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E       6        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Jun 23 23:05:08 2016

                       main@CheckSum 006B             _eusart1TxBufferRemaining 0050  
                        __CFG_BORV$3 000000                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l411 0222  
                                l409 01E2                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  u644 013E  
                                u645 0136                                  u664 0182  
                                u665 017A                      _timer1ReloadVal 004E  
                                prod 000FF3                                  wreg 000FE8  
                               _B0D0 000E86                                 _B0D1 000E87  
                               _B0D2 000E88                                 _B0D3 000E89  
                               _B0D4 000E8A                                 _B0D5 000E8B  
                               _B0D6 000E8C                                 _B0D7 000E8D  
                               l1510 0266                                 l1522 027A  
                               l1508 0260                                 l1532 0408  
                               l1472 0282                                 l1490 0310  
                               l1546 0434                                 l1538 041E  
                               l1580 00F4                                 l1590 0190  
                               l1558 00B0                                 l1576 00EA  
                               l1586 011E                                 _LATA 000F89  
                               _PM25 0029                                 _LATB 000F8A  
                               _LATC 000F8B                                 _TMR1 000FCE  
                               _WPUB 000F5B                                 _main 00A4  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0051  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00A0  
                      __CFG_IESO$OFF 000000                        __CFG_MCLRE$ON 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 04FA                                _B0DLC 000E85  
                              ?_main 003F                      _TMR1_StartTimer 050E  
                              _T1CON 000FCD                                i2l113 0384  
                              i2l107 0468                                i2l140 005A  
                              i2l144 0064                                i2l138 004E  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 043E  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     __end_of_TMR1_ISR 04EC  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                              _delay 0400                                main@i 006D  
            __end_of_TMR1_Initialize 048E                                tablat 000FF5  
                              status 000FD8                __size_of_ECAN_Receive 00DE  
                    __initialization 04AE           __end_of_EUSART1_Initialize 0400  
                       __end_of_main 01A0                     __end_of_InitECAN 0328  
        ?_INTERRUPT_InterruptManager 003F                               ??_main 0066  
                      __activetblptr 000000                       __CFG_PLLCFG$ON 000000  
                     __CFG_RETEN$OFF 000000                ?_EUSART1_Transmit_ISR 003F  
                             _B0EIDH 000E83                               _B0EIDL 000E84  
                             _B0SIDH 000E81                               _B0SIDL 000E82  
                             ?_delay 0060                               _CANCON 000F6F  
                             _T1GCON 000FAA                         _ECAN_Receive 01A0  
                             i2l1118 0464                      __CFG_BBSIZ$BB2K 000000  
                             i2l1136 03BC                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _RXB0D0 000F66  
                             _RXB0D1 000F67                               _RXB0D2 000F68  
                             _RXB0D3 000F69                               _RXB0D4 000F6A  
                             _RXB1D0 000F36                               _RXB0D5 000F6B  
                             _RXB1D1 000F37                               _RXB0D6 000F6C  
                             _RXB1D2 000F38                               _RXB0D7 000F6D  
                             _RXB1D3 000F39                               _RXB1D4 000F3A  
                             _RXB1D5 000F3B                               _RXB1D6 000F3C  
                             _RXB1D7 000F3D                               _SPBRG1 000FAF  
                             _TXB0D0 000F26                               _TXB0D1 000F27  
                             _TXB0D2 000F28                               _TXB0D3 000F29  
                             _TXB0D4 000F2A                               _TXB0D5 000F2B  
                             _TXB0D6 000F2C                               _TXB0D7 000F2D  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
          __size_ofi2_TMR1_StopTimer 0004                       __CFG_XINST$OFF 000000  
            __end_of_TMR1_StartTimer 0512                         ?_TMR1_Reload 003F  
                     __CFG_STVREN$ON 000000                               delay@a 0062  
                             delay@b 0064                               delay@x 0060  
                             clear_0 04B4                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    _eusart1RxBuffer 0019        __size_of_INTERRUPT_Initialize 000A  
                    _eusart1TxBuffer 0021                     ?_TMR1_Initialize 003F  
                  _SYSTEM_Initialize 04C4                           __accesstop 0060  
            __end_of__initialization 04BA                   ?_SYSTEM_Initialize 003F  
                      ___rparam_used 000001                       __pcstackCOMRAM 003F  
                ??_SYSTEM_Initialize 0060                            ?_TMR1_ISR 003F  
                      __end_of_delay 043E               __size_of_ECAN_Transmit 0054  
             ??_EUSART1_Transmit_ISR 003F          __end_of_EUSART1_Receive_ISR 03C0  
                            ??_delay 0062            __end_of_SYSTEM_Initialize 04DA  
                      _eusart1RxHead 002E                            ?_InitECAN 003F  
                      _eusart1TxHead 0030                        _eusart1RxTail 002F  
                      _eusart1TxTail 0031                           __pnvCOMRAM 004E  
                   ?_TMR1_StartTimer 003F                           ??_TMR1_ISR 003F  
                          _B0CONbits 000E80                              _ECANCON 000F72  
                            _BRGCON1 000E43                              _BRGCON2 000E44  
                            _BRGCON3 000E45              __size_of_TMR1_StopTimer 0004  
                   __CFG_CANMX$PORTB 000000                              _OSCCON2 000FD2  
                            _RXB0DLC 000F65                              _RXB1DLC 000F35  
                            _RXB0CON 000F60                              _RXB1CON 000F30  
                            _OSCTUNE 000F9B                              _SPBRGH1 000F7D  
                            _TXB0DLC 000F25                              _RXFCON0 000E46  
                            _RXFCON1 000E47                        _ECAN_Transmit 0328  
                         ??_InitECAN 0060                     i2_TMR1_StopTimer 0516  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                 __size_of_TMR1_Reload 000A  
                            __pcinit 04AE                              __ramtop 0F00  
                            __ptext0 00A4                              __ptext1 0400  
                            __ptext2 04C4                              __ptext3 046C  
                            __ptext4 050E                              __ptext5 048E  
                            __ptext6 04EC                              __ptext7 04FA  
                            __ptext8 03C0                              __ptext9 0512  
                          _T1CONbits 000FCD               EUSART1_Receive_ISR@res 003F  
              _OSCILLATOR_Initialize 04EC                   _EUSART1_Initialize 03C0  
           ??_PIN_MANAGER_Initialize 0060                    __CFG_MSSPMSK$MSK7 000000  
                            _temp_D0 0032                              _temp_D1 0033  
                            _temp_D2 0034                              _temp_D3 0035  
                            _temp_D4 0036                              _temp_D5 0037  
                            _temp_D6 0038                              _temp_D7 0039  
                     ?_ECAN_Transmit 003F           __size_of_SYSTEM_Initialize 0016  
               end_of_initialization 04BA                  ?_EUSART1_Initialize 003F  
                            postinc0 000FEE                 ??_EUSART1_Initialize 0060  
                          _PORTCbits 000F82                     __CFG_FOSC$INTIO2 000000  
                  __CFG_SOSCSEL$HIGH 000000         __end_of_INTERRUPT_Initialize 0504  
                  __size_of_TMR1_ISR 0012                       _TMR1_StopTimer 0512  
             ?_OSCILLATOR_Initialize 003F                  start_initialization 04AE  
                    ??_ECAN_Transmit 0060      __size_of_PIN_MANAGER_Initialize 0020  
                        _CANSTATbits 000F6E                    __size_of_InitECAN 00AA  
           __size_of_TMR1_Initialize 0022               __end_of_TMR1_StopTimer 0516  
                     _eusart1RxCount 002D             __end_ofi2_TMR1_StopTimer 051A  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 002E  
                      __pcstackBANK0 0060         __size_of_EUSART1_Receive_ISR 0044  
             _PIN_MANAGER_Initialize 048E                            __pintcode 0008  
                    ?_TMR1_StopTimer 003F         ??_INTERRUPT_InterruptManager 0040  
                           _BAUDCON1 000FA7             __size_of_TMR1_StartTimer 0004  
                     __size_of_delay 003E                        ?_ECAN_Receive 003F  
               _INTERRUPT_Initialize 04FA                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D                            _temp_EIDH 003B  
                          _temp_EIDL 003C                            _temp_SIDH 003D  
                          _temp_SIDL 003E  __size_of_INTERRUPT_InterruptManager 0098  
                           _PIR1bits 000F9E                             _PIR5bits 000F77  
                           _RXB0EIDH 000F63                             _RXB0EIDL 000F64  
                           _RXB1EIDH 000F33                             _RXB1EIDL 000F34  
                           _RCONbits 000FD0                        ??_TMR1_Reload 003F  
                           _RXB0SIDH 000F61                             _RXB0SIDL 000F62  
                           _RXB1SIDH 000F31                             _RXF0EIDH 000EE2  
                           _RXB1SIDL 000F32                             _RXF0EIDL 000EE3  
                           _RXF2EIDH 000EEA                             _RXF2EIDL 000EEB  
                           _RXF0SIDH 000EE0                             _RXF0SIDL 000EE1  
                           _TXB0EIDH 000F23                             _TXB0EIDL 000F24  
                           _RXF2SIDH 000EE8                             _RXF2SIDL 000EE9  
                           _TMR1_ISR 04DA                             _RXM0EIDH 000EFA  
                           _RXM0EIDL 000EFB                             _TXB0SIDH 000F21  
                           _RXM1EIDH 000EFE                             _TXB0SIDL 000F22  
                           _RXM1EIDL 000EFF                             _RXM0SIDH 000EF8  
                           _RXM0SIDL 000EF9                             _RXM1SIDH 000EFC  
                           _RXM1SIDL 000EFD                    ??_TMR1_Initialize 0060  
              ECAN_Receive@RXMsgFlag 0060                    i2_TMR1_StartTimer 051A  
                 ?i2_TMR1_StartTimer 003F                       ??_ECAN_Receive 0060  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 003F  
                           _InitECAN 027E                  ??i2_TMR1_StartTimer 003F  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000              ??_OSCILLATOR_Initialize 0060  
        __size_of_EUSART1_Initialize 0040            __end_ofi2_TMR1_StartTimer 051E  
                __end_of_TMR1_Reload 050E                             __ptext10 027E  
                           __ptext11 0328                             __ptext12 01A0  
                         _T1GCONbits 000FAA                             __ptext14 04DA  
                           __ptext15 0516                             __ptext16 043E  
                           __ptext17 037C                             __ptext18 051A  
                           __ptext19 0504                    ??_TMR1_StartTimer 0060  
                      __size_of_main 00FC                             _temp_DLC 003A  
                           int$flags 0051                        _USART1_RX_BUF 0001  
                      _USART1_RX_STA 002B   __end_of_INTERRUPT_InterruptManager 00A0  
         _INTERRUPT_InterruptManager 0008                             main@temp 0069  
                __CFG_INTOSCSEL$HIGH 000000                  _EUSART1_Receive_ISR 037C  
                        _RXB0CONbits 000F60                          _RXB1CONbits 000F30  
                  ?i2_TMR1_StopTimer 003F                           _INTCONbits 000FF2  
                 ??i2_TMR1_StopTimer 003F               ??_INTERRUPT_Initialize 0060  
              __end_of_ECAN_Transmit 037C                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 003F              ?_PIN_MANAGER_Initialize 003F  
                        _TXB0CONbits 000F20                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 046C                     ??_TMR1_StopTimer 0060  
                        _TMR1_Reload 0504                   __CFG_WDTPS$1048576 000000  
               __end_of_ECAN_Receive 027E           __size_ofi2_TMR1_StartTimer 0004  
              ??_EUSART1_Receive_ISR 003F       __end_of_PIN_MANAGER_Initialize 04AE  
                __CFG_BORPWR$ZPBORMV 000000                      _TMR1_Initialize 046C  
